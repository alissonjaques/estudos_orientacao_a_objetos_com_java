import java.util.Scanner; // importação da classe Scanner para manipulação de dados fornecidos pelo usuário

/**
 * 
 * 	@author Alisson Jaques	
 * 
 * */
public class Principal { // declaração da classe

	public static void main(String[] argumentos) {
		
		
		Scanner opcao = new Scanner(System.in);						// criamos um objeto Scanner para podermos manipular valores fornecidos pelo usuário
		final double distanciaDaTerraALuaEmQuilometros = 382000;
		final double areaCampoFutebolMetrosQuadrados = 8250;
		final double volumePiscinaOlimpicaMetrosCubicos = 1890;
		final double velocidadeDaLuzEmQuilometrosPorHora = 1080000000;
		final double periodoDeGestacaoElefanteIndianoEmDias = 624;
		
		System.out.println("****************************** Distância Média da Terra à Lua *****************************************");
		distanciaDaTerraALua(distanciaDaTerraALuaEmQuilometros, opcao);
		
		System.out.println("*********************** Área de um Campo de Futebol - Conversão de Unidades ***************************");
		areaCampoFutebol(areaCampoFutebolMetrosQuadrados, opcao);
		
		System.out.println("******************** Volume de uma Piscina - Expresso em Diferentes Unidades **************************");
		volumePiscinaOlimpica(volumePiscinaOlimpicaMetrosCubicos);
		
		System.out.println(); // quebra de linha para organização das informações no terminal
		System.out.println("********************** Velocidade da Luz - Expressa em Diferentes Unidades ****************************");
		velocidadeDaLuz(velocidadeDaLuzEmQuilometrosPorHora);
		
		System.out.println(); // quebra de linha para organização das informações no terminal
		System.out.println("******************* Testes para a Classe DemoConversaoDeUnidadesDeComprimento *************************");
		System.out.println(); // quebra de linha para organização das informações no terminal
		DemoConversaoDeUnidadesDeComprimento.main(argumentos);
		
	}
	
	/**
	 *  O método distanciaDaTerraALua recebe como argumento a distância média
	 *  da terra à lua em quilômetros e informa esse valor convertido  em milhas
	 *  ou pés (dependendo da escolha realizada pelo usuário). Esse método é estático, 
	 *  então pode ser chamado por outras classes diretamente, sem a necessidade de criação
	 *  de objetos para a mesma. Ele também pode ser considerado uma subrotina para o método
	 *  main principal desta classe.
	 *  @param quilometros o valor em quilômetros a ser convertido
	 *  @param opcaoEscolhida um apontador para um objeto da classe Scanner, para podermos manipular
	 *  dados fornecidos pelo usuário
	 * 
	 * */
	public static void distanciaDaTerraALua(double quilometros, Scanner opcaoEscolhida) {
		
		byte escolha;                            // a escolha do usuário
		
		System.out.println("\nVocê deseja que a distância seja convertida em milhas ou pés? (escolha 1 para milhas ou 2 para pés)\n");
		escolha = opcaoEscolhida.nextByte(); // guardamos o conteúdo fornecido pelo usuário na variável escolha
		
		while(escolha!=1 && escolha!=2) { // enquanto a escolha não for válida
			
			System.out.println("Escolha uma opção válida! Milhas (1) ou Pés (2):"); // peça ao usuário uma valor válido
			escolha = opcaoEscolhida.nextByte(); // guarde o valor informado na variável escolha
			
		} // fim do while
		
		System.out.println(); // quebra de linha para organização das informações no terminal
		
		if(escolha==1) { // se a escolha for milhas
			
			// mostra o valor da distância convertido em milhas
			System.out.println("A distância média da terra à lua é de " + ConversaoDeUnidadesDeComprimento.quilômetrosParaMilhas(quilometros)+" milhas\n");
			
		}
		else { // senão
			
			// mostra o valor convertido em pés
			System.out.println("A distância média da terra à lua é de " + ConversaoDeUnidadesDeComprimento.quilômetrosParaPés(quilometros)+" pés\n");
			
		} // fim-se
		
	} // fim do método distanciaDaTerraALua
	
	/**
	 *  O método areaCampoFutebol recebe como argumento a área em metros quadrados
	 *  de um campo de futebol e um objeto da classe Scanner. Este método converte
	 *  o valor da área fornecida em pés quadrados, acres ou centímetros quadrados
	 *  (dependendo da escolha realizada pelo usuário). Esse método é estático, 
	 *  então pode ser chamado por outras classes diretamente, sem a necessidade de criação
	 *  de objetos para a mesma. Ele também pode ser considerado uma subrotina para o método
	 *  main principal desta classe.
	 *  @param areaEmMetrosQuadrados o valor da área do campo de futebol em metros quadrados
	 *  @param opcaoEscolhida um apontador para um objeto da classe Scanner, para podermos manipular
	 *  dados fornecidos pelo usuário
	 * 
	 * */
	public static void areaCampoFutebol(double areaEmMetrosQuadrados, Scanner opcaoEscolhida) {
		
		byte escolha; // a escolha do usuário
		
		System.out.println("\nVocê deseja que a área seja convertida em pés quadrados, acres ou centímetros quadrados? \n escolha 1: para pés quadrados\n escolha 2: para acres\n escolha 3: para centímetros quadrados\n");
		escolha = opcaoEscolhida.nextByte(); // guardamos o conteúdo fornecido pelo usuário na variável escolha
		
		while(escolha!=1 && escolha!=2 && escolha!=3) { // enquanto a escolha não for válida
			
			System.out.println("Escolha uma opção válida! Pés Quadrados (1), Acres (2) ou Centímetros Quadrados (3):"); // peça ao usuário uma valor válido
			escolha = opcaoEscolhida.nextByte(); // guarde o valor informado na variável escolha
			
		} // fim do while
		
		System.out.println(); // quebra de linha para organização das informações no terminal
		
		if(escolha==1) { // se a escolha for pés quadrados
			
			// mostra o valor da área convertido em pés quadrados
			System.out.println("A área do campo de futebol é " + ConversaoDeUnidadesDeArea.metrosQuadradosParaPésQuadrados(areaEmMetrosQuadrados)+" pés quadrados\n");
			
		}
		else { // senão
			
			if(escolha==2) { // se a escolha for acres
			
				// mostra o valor da área convertido em acres
				System.out.println("A área do campo de futebol é " + ConversaoDeUnidadesDeArea.pésQuadradosParaAcres(ConversaoDeUnidadesDeArea.metrosQuadradosParaPésQuadrados(areaEmMetrosQuadrados))+" acres\n");
				
			}			
			else { // senão
				
				// mostra o valor da área convertido em centímetros quadrados
				System.out.println("A área do campo de futebol é " + ConversaoDeUnidadesDeArea.metrosQuadradosParaCentímetrosQuadrados(areaEmMetrosQuadrados) + " centímetros quadrados\n");
								
			} // fim-se
			
		} // fim-se
		
	} // fim do método areaCampoFutebol	
	
	/**
	 *  O método volumePiscinaOlimpica recebe como argumento o volume em metros cúbicos
	 *  de uma piscina e converte esse valor em litros, pés cúbicos e centímetros cúbicos. 
	 *  Esse método é estático, então pode ser chamado por outras classes diretamente, 
	 *  sem a necessidade de criação de objetos para a mesma. Ele também pode ser 
	 *  considerado uma subrotina para o método main principal desta classe.
	 *  @param volumePiscinaOlimpicaMetrosCubicos o valor do volume da piscina em metros
	 *  cúbicos
	 * 
	 * */
	public static void volumePiscinaOlimpica(Double volumePiscinaOlimpicaMetrosCubicos) {
		
		/*
		 * Criamos uma variável auxiliar que ira receber um valor, referente ao volume em litros da piscina.
		 * Isso é feito através de uma chamada ao método estático metrosCúbicosParaLitros da classe 
		 * ConversãoDeUnidadesDeVolume.
		 * 
		 * */
		double litros = ConversaoDeUnidadesDeVolume.metrosCúbicosParaLitros(volumePiscinaOlimpicaMetrosCubicos);
		
		System.out.println(); // quebra de linha para organização dos dados no terminal
		
		System.out.println("O volume da piscina é " + litros + " litros"); // mostra o valor do volume em litros
		System.out.println("O volume da piscina é " + ConversaoDeUnidadesDeVolume.metrosCúbicosParaPésCúbicos(volumePiscinaOlimpicaMetrosCubicos) + " pés cúbicos"); // mostra o valor do volume em pés cúbicos
		System.out.println("O volume da piscina é " + ConversaoDeUnidadesDeVolume.litrosParaCentímetrosCúbicos(litros) + " centímetros cúbicos"); // mostra o valor do volume em centímetros cúbicos
		
	} // fim do método volumePiscinaOlimpica
	
	/**
	 *  O método velocidadeDaLuz recebe um único argumento,
	 *  que é um valor referente à velocidade da luz em km/h
	 *  e imprime no terminal essa velocidade expressa em milhas
	 *  por hora, metros por segundo e pés por segundo. Este método
	 *  é estático, não necessitando de criações de objetos da classe
	 *  Principal para ser utilizado. Este método é uma das subrotinas
	 *  do método main principal.
	 *  @param velocidadeDaLuzEmQuilometrosPorHora o valor da velocidade
	 *  da luz em quilômetros por hora
	 * 
	 * */
	public static void velocidadeDaLuz(double velocidadeDaLuzEmQuilometrosPorHora) {
		
		System.out.println(); // quebra de linha para organização dos dados no terminal
		System.out.println("A velocidade da luz é " + ConversaoDeUnidadesDeVelocidade.quilômetrosPorHoraParaMilhasPorHora(velocidadeDaLuzEmQuilometrosPorHora) + " milhas por hora"); // mostra o valor da velocidade da luz em milhas por hora
		System.out.println("A velocidade da luz é " + ConversaoDeUnidadesDeVelocidade.quilômetrosPorHoraParaMetrosPorSegundo(velocidadeDaLuzEmQuilometrosPorHora) + " m/s");          // mostra o valor da velocidade da luz em metros por segundo
		System.out.println("A velocidade da luz é " + ConversaoDeUnidadesDeVelocidade.quilômetrosPorHoraParaPésPorSegundo(velocidadeDaLuzEmQuilometrosPorHora) + " pés por segundo"); // mostra o valor da velocidade da luz em pés por segundo
		
	} // fim do método velocidadeDaLuz
		
	public static void gestacaoElefanteIndiano(double periodoEmDias) {
		
		double segundos = ConversaoDeUnidadesDeTempo.diasParaSegundos(periodoEmDias);
		int segundosInteiros = (int)segundos;
		
		System.out.println();
		System.out.println("O período de gestação de um elefante indiano é " + periodoEmDias + " dias");
		System.out.println("O período de gestação de um elefante indiano é " + ConversaoDeUnidadesDeTempo.diasParaHoras(periodoEmDias) + " horas");
		System.out.println("O período de gestação de um elefante indiano é " + ConversaoDeUnidadesDeTempo.diasParaMinutos(periodoEmDias) + " minutos");
		System.out.println("O período de gestação de um elefante indiano é " + segundos + " segundos");
		System.out.println("Se a gestação de um elefante indiano começasse agora, levaria " + Relogio.relogio(segundosInteiros)+" para acabar.");
		
		
	} // fim do método gestacaoElefanteIndiano
	
} // fim classe Principal
