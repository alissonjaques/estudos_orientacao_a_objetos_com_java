/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package telas;

import classes.Professor;
import enums.Titulacao;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Alisson Jaques
 */
public class TelaCadastroProfessor extends javax.swing.JFrame {

    /**
     * @return the listaProfessores
     */
    public List<Professor> getListaProfessores() {
        return listaProfessores;
    }

    /**
     * @param listaProfessores the listaProfessores to set
     */
    public void setListaProfessores(List<Professor> listaProfessores) {
        this.listaProfessores = listaProfessores;
    }
    
    private List<Professor> listaProfessores;
    private boolean alterar;
    /**
     * Creates new form TelaCadastroProfessor
     * @param listaProfessores
     */
    public TelaCadastroProfessor(List<Professor> listaProfessores) {
        this.listaProfessores = listaProfessores;
        alterar = false;
        initComponents();
        preencherTabelaProfessor();
    }
    
    private void preencherTabelaProfessor(){
        
        if(!getListaProfessores().isEmpty()){
            
            DefaultTableModel model = (DefaultTableModel) getTbProfessor().getModel();
            
            for (Professor professor : getListaProfessores()) {
                model.addRow(new Object[]{professor.getCpf(), professor.getNome(), professor.getMasp(), professor.getTitulacao()});
            }
            
        }   
    }
    
    private void limparCampos(){
        getCbDepartamento().setSelectedIndex(-1);
        getCbTitulacao().setSelectedIndex(-1);
        getFtfCpf().setText("");
        getFtfDataNasc().setText("");
        getJftMatricula().setText("");
        getRbMasc().setSelected(true);
        getJtfEndereco().setText("");
        getTfNome().setText("");
        getBtnAlterar().setEnabled(false);
        getBtnExcluir().setEnabled(false);
        getFtfCpf().setEnabled(true);
        getTbProfessor().setEnabled(true);
        getTbProfessor().getSelectionModel().removeSelectionInterval(0, getTbProfessor().getRowCount());
        alterar = false;
    }
    
    private void preencherCampos(Professor professor){
        getFtfCpf().setText(professor.getCpf());
        
        DateFormat df = new SimpleDateFormat("dd/mm/yyyy");
        String dataNasc = df.format(professor.getDataNasc());
        
        getFtfDataNasc().setText(dataNasc);
        getJftMatricula().setText(professor.getMasp());
        
        if(professor.getSexo() == 'M'){
            getRbMasc().setSelected(true);
        }
        else{
           getRbFem().setSelected(true);
        }
        
        getJtfEndereco().setText(professor.getEndereco());
        getTfNome().setText(professor.getNome());
        
        int quantDep = getCbDepartamento().getItemCount();
        
        for(int i = 0; i < quantDep; i++){
            String dep = getCbDepartamento().getItemAt(i);
            if(dep.equals(professor.getDepartamento())){
                getCbDepartamento().setSelectedIndex(i);
                break;
            }
        }
        
        int quantTit = getCbTitulacao().getItemCount();
        
        
        String titulo = "";
        
        switch(professor.getTitulacao()){
            case MESTRADO:
                titulo = "Mestrado";
                break;
            case DOUTORADO:
                titulo = "Doutorado";
                break;
            case ESPECIALIZACAO:
                titulo = "Especialização";
                break;
        }
        
        for(int i = 0; i < quantTit; i++){
            String tit = getCbTitulacao().getItemAt(i);
            if(tit.equals(titulo)){
                getCbTitulacao().setSelectedIndex(i);
                break;
            }
        }
        
        getFtfCpf().setEnabled(false);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgSexo = new javax.swing.ButtonGroup();
        jProgressBar1 = new javax.swing.JProgressBar();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        pInfBasicas = new javax.swing.JPanel();
        lbNome = new javax.swing.JLabel();
        tfNome = new javax.swing.JTextField();
        lCpf = new javax.swing.JLabel();
        ftfCpf = new javax.swing.JFormattedTextField();
        lDataNasc = new javax.swing.JLabel();
        ftfDataNasc = new javax.swing.JFormattedTextField();
        lbEndereco = new javax.swing.JLabel();
        jtfEndereco = new javax.swing.JTextField();
        pSexo = new javax.swing.JPanel();
        rbMasc = new javax.swing.JRadioButton();
        rbFem = new javax.swing.JRadioButton();
        pInfProfessor = new javax.swing.JPanel();
        lbMatrícula = new javax.swing.JLabel();
        jftMatricula = new javax.swing.JFormattedTextField();
        lbDepartamento = new javax.swing.JLabel();
        cbDepartamento = new javax.swing.JComboBox<>();
        lbTitulacao = new javax.swing.JLabel();
        cbTitulacao = new javax.swing.JComboBox<>();
        pBotoes = new javax.swing.JPanel();
        btnOk = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        pTabelaProfessor = new javax.swing.JPanel();
        spTabelaProfessor = new javax.swing.JScrollPane();
        tbProfessor = new javax.swing.JTable();
        pBotoesTabela = new javax.swing.JPanel();
        btnAlterar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de Professores");

        pInfBasicas.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Informações Básicas", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12))); // NOI18N

        lbNome.setText("Nome: ");

        lCpf.setText("CPF: ");

        try {
            ftfCpf.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        lDataNasc.setText("Data de Nascimento: ");

        ftfDataNasc.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter()));

        lbEndereco.setText("Endereço: ");
        lbEndereco.setToolTipText("");

        pSexo.setBorder(javax.swing.BorderFactory.createTitledBorder(" Sexo"));

        bgSexo.add(rbMasc);
        rbMasc.setSelected(true);
        rbMasc.setText("Masculino");

        bgSexo.add(rbFem);
        rbFem.setText("Feminino");

        javax.swing.GroupLayout pSexoLayout = new javax.swing.GroupLayout(pSexo);
        pSexo.setLayout(pSexoLayout);
        pSexoLayout.setHorizontalGroup(
            pSexoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pSexoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pSexoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rbMasc)
                    .addComponent(rbFem))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        pSexoLayout.setVerticalGroup(
            pSexoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pSexoLayout.createSequentialGroup()
                .addComponent(rbMasc)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(rbFem)
                .addContainerGap())
        );

        javax.swing.GroupLayout pInfBasicasLayout = new javax.swing.GroupLayout(pInfBasicas);
        pInfBasicas.setLayout(pInfBasicasLayout);
        pInfBasicasLayout.setHorizontalGroup(
            pInfBasicasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pInfBasicasLayout.createSequentialGroup()
                .addGroup(pInfBasicasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pInfBasicasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(pInfBasicasLayout.createSequentialGroup()
                            .addGroup(pInfBasicasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lbNome)
                                .addComponent(lCpf))
                            .addGap(1, 1, 1)
                            .addGroup(pInfBasicasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(pInfBasicasLayout.createSequentialGroup()
                                    .addComponent(ftfCpf, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(lDataNasc)
                                    .addGap(2, 2, 2)
                                    .addComponent(ftfDataNasc, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(tfNome)))
                        .addGroup(pInfBasicasLayout.createSequentialGroup()
                            .addComponent(lbEndereco)
                            .addGap(4, 4, 4)
                            .addComponent(jtfEndereco)))
                    .addComponent(pSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pInfBasicasLayout.setVerticalGroup(
            pInfBasicasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pInfBasicasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pInfBasicasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pInfBasicasLayout.createSequentialGroup()
                        .addComponent(lbNome)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(tfNome))
                .addGap(18, 18, 18)
                .addGroup(pInfBasicasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lCpf)
                    .addComponent(ftfCpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lDataNasc)
                    .addComponent(ftfDataNasc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pInfBasicasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbEndereco)
                    .addComponent(jtfEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pInfProfessor.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Informações Professor", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12))); // NOI18N

        lbMatrícula.setText("Matrícula: ");

        try {
            jftMatricula.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####-##########")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        lbDepartamento.setText("Departamento: ");

        cbDepartamento.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ciências Sociais", "Ciências Humanas", "Exatas", "Engenharias" }));
        cbDepartamento.setSelectedIndex(-1);
        cbDepartamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbDepartamentoActionPerformed(evt);
            }
        });

        lbTitulacao.setText("Titulação: ");

        cbTitulacao.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Especialização", "Mestrado", "Doutorado" }));
        cbTitulacao.setSelectedIndex(-1);
        cbTitulacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbTitulacaoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pInfProfessorLayout = new javax.swing.GroupLayout(pInfProfessor);
        pInfProfessor.setLayout(pInfProfessorLayout);
        pInfProfessorLayout.setHorizontalGroup(
            pInfProfessorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pInfProfessorLayout.createSequentialGroup()
                .addComponent(lbMatrícula)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(jftMatricula, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(285, 285, 285))
            .addGroup(pInfProfessorLayout.createSequentialGroup()
                .addGroup(pInfProfessorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbDepartamento)
                    .addComponent(lbTitulacao))
                .addGap(4, 4, 4)
                .addGroup(pInfProfessorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cbTitulacao, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbDepartamento, 0, 200, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pInfProfessorLayout.setVerticalGroup(
            pInfProfessorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pInfProfessorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pInfProfessorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbMatrícula)
                    .addComponent(jftMatricula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pInfProfessorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbDepartamento)
                    .addComponent(cbDepartamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pInfProfessorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbTitulacao)
                    .addComponent(cbTitulacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        btnOk.setText("Confirmar");
        btnOk.setToolTipText("");
        btnOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pBotoesLayout = new javax.swing.GroupLayout(pBotoes);
        pBotoes.setLayout(pBotoesLayout);
        pBotoesLayout.setHorizontalGroup(
            pBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pBotoesLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnOk, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );
        pBotoesLayout.setVerticalGroup(
            pBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pBotoesLayout.createSequentialGroup()
                .addGroup(pBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnOk)
                    .addComponent(btnCancelar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tbProfessor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CPF", "Nome", "Matricula no Est.", "Departamento"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbProfessor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tbProfessorFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tbProfessorFocusLost(evt);
            }
        });
        tbProfessor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbProfessorMouseClicked(evt);
            }
        });
        spTabelaProfessor.setViewportView(tbProfessor);
        if (tbProfessor.getColumnModel().getColumnCount() > 0) {
            tbProfessor.getColumnModel().getColumn(0).setPreferredWidth(100);
            tbProfessor.getColumnModel().getColumn(1).setPreferredWidth(140);
            tbProfessor.getColumnModel().getColumn(2).setPreferredWidth(100);
            tbProfessor.getColumnModel().getColumn(3).setPreferredWidth(100);
        }

        javax.swing.GroupLayout pTabelaProfessorLayout = new javax.swing.GroupLayout(pTabelaProfessor);
        pTabelaProfessor.setLayout(pTabelaProfessorLayout);
        pTabelaProfessorLayout.setHorizontalGroup(
            pTabelaProfessorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pTabelaProfessorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(spTabelaProfessor)
                .addContainerGap())
        );
        pTabelaProfessorLayout.setVerticalGroup(
            pTabelaProfessorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pTabelaProfessorLayout.createSequentialGroup()
                .addComponent(spTabelaProfessor, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE)
                .addContainerGap())
        );

        btnAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/user_edit.png"))); // NOI18N
        btnAlterar.setText("Alterar");
        btnAlterar.setEnabled(false);
        btnAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarActionPerformed(evt);
            }
        });

        btnExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/user_delete.png"))); // NOI18N
        btnExcluir.setText("Excluir");
        btnExcluir.setEnabled(false);
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pBotoesTabelaLayout = new javax.swing.GroupLayout(pBotoesTabela);
        pBotoesTabela.setLayout(pBotoesTabelaLayout);
        pBotoesTabelaLayout.setHorizontalGroup(
            pBotoesTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pBotoesTabelaLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pBotoesTabelaLayout.setVerticalGroup(
            pBotoesTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pBotoesTabelaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pBotoesTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnExcluir)
                    .addComponent(btnAlterar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pInfBasicas, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pInfProfessor, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pBotoes, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pTabelaProfessor, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pBotoesTabela, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pInfBasicas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pInfProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pBotoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pTabelaProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pBotoesTabela, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cbDepartamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbDepartamentoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbDepartamentoActionPerformed

    private void cbTitulacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbTitulacaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbTitulacaoActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        int op = JOptionPane.showConfirmDialog(this, "Deseja mesmo sair do Cadastro de Professores?", "Sair", JOptionPane.OK_CANCEL_OPTION);

        if (op == 0) {
            dispose();
        }
    }//GEN-LAST:event_btnCancelarActionPerformed
    
    private boolean validarDados() {

        boolean ret = true;

        if (getCbDepartamento().getSelectedIndex() == -1) {
            ret = false;
        } else if (getCbTitulacao().getSelectedIndex() == -1) {
            ret = false;
        } else if (getFtfCpf().getText().isEmpty()) {
            ret = false;
        } else if (getFtfDataNasc().getText().isEmpty()) {
            ret = false;
        } else if (getJftMatricula().getText().isEmpty()) {
            ret = false;
        } else if (getJtfEndereco().getText().isEmpty()) {
            ret = false;
        } else if (getTfNome().getText().isEmpty()) {
            ret = false;
        }

        if (!ret) {
            JOptionPane.showMessageDialog(this, "Favor preencher todos os campos referentes a professor.", "Mensagem de erro", JOptionPane.ERROR_MESSAGE);
        }

        return ret;

    }
    
    private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed
        if (validarDados()) {
            Professor professor = new Professor();
            professor.setCpf(getFtfCpf().getText());

            int index = getListaProfessores().indexOf(professor);
            
            if(index > -1){
                if(!alterar){
                    JOptionPane.showMessageDialog(this, "Já existe um professor com esse CPF!", "Mensagem de erro", JOptionPane.ERROR_MESSAGE);
                    return;
                }
                else{
                    professor = getListaProfessores().get(index);
                }   
            }
            
            professor.setNome(getTfNome().getText());
            String dataNasc = getFtfDataNasc().getText();
            DateFormat df = new SimpleDateFormat("dd/mm/yyyy");
            try {
                professor.setDataNasc(df.parse(dataNasc));
            } catch (ParseException ex) {
                JOptionPane.showMessageDialog(this, "Data com formato invalido! Por favor, fornecer uma data de nascimento valida!", "Mensagem de erro", JOptionPane.ERROR_MESSAGE);
                return;
            }

            professor.setEndereco(getJtfEndereco().getText());

            if (getRbMasc().isSelected()) {
                professor.setSexo('M');
            } else {
                professor.setSexo('F');
            }

            professor.setMasp(getJftMatricula().getText());
            professor.setDepartamento((String) getCbDepartamento().getSelectedItem());
            
            switch(getCbTitulacao().getSelectedIndex()){
                case 0:
                    professor.setTitulacao(Titulacao.ESPECIALIZACAO);
                    break;
                case 1:
                    professor.setTitulacao(Titulacao.MESTRADO);
                    break;
                case 2:
                    professor.setTitulacao(Titulacao.DOUTORADO);
                    break;
            }
            
            DefaultTableModel model = (DefaultTableModel) getTbProfessor().getModel();
            
            String msg = "";
            if(!alterar){
                msg = "Professor cadastrado com sucesso!";
                getListaProfessores().add(professor);
                model.addRow(new Object[]{professor.getCpf(), professor.getNome(), professor.getMasp(), professor.getDepartamento()});
            }
            else{
                msg = "Alteração cadastral de professor realizada com sucesso!";
                model.setValueAt(professor.getNome(), index, 1);
                model.setValueAt(professor.getMasp(), index, 2);
                model.setValueAt(professor.getDepartamento(), index, 3);
            }
            
            JOptionPane.showMessageDialog(this, msg, "Confirmação", JOptionPane.INFORMATION_MESSAGE);
            
            limparCampos();
            System.out.println(getListaProfessores());
        }
    }//GEN-LAST:event_btnOkActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        int op = JOptionPane.showConfirmDialog(this, "Deseja mesmo excluir o usuário selecionado?", "Sair", JOptionPane.OK_CANCEL_OPTION);

        if (op == 0) {
            excluirProfessor();
        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void excluirProfessor(){
        DefaultTableModel model = (DefaultTableModel) getTbProfessor().getModel();
        String cpf = (String) model.getValueAt(getTbProfessor().getSelectedRow(), 0);
        
        Professor professor = new Professor();
        professor.setCpf(cpf);
        int index = getListaProfessores().indexOf(professor);
        
        if(index > -1){
            getListaProfessores().remove(index);
            model.removeRow(getTbProfessor().getSelectedRow());
            JOptionPane.showMessageDialog(this, "Professor excluído com sucesso!", "Confirmação de exclusão", JOptionPane.INFORMATION_MESSAGE);
            limparCampos();
        }
    }
    
    private void tbProfessorFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tbProfessorFocusGained
        if(getTbProfessor().getSelectedRow() > -1){
            getBtnAlterar().setEnabled(true);
            getBtnExcluir().setEnabled(true);
        }
    }//GEN-LAST:event_tbProfessorFocusGained

    private void tbProfessorFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tbProfessorFocusLost
        if(getTbProfessor().getSelectedRow() < 0){
            getBtnAlterar().setEnabled(false);
            getBtnExcluir().setEnabled(false);
        }
    }//GEN-LAST:event_tbProfessorFocusLost

    private void btnAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarActionPerformed
        if(getTbProfessor().getSelectedRow() >- 1){
            alterarProfessor();
        }
    }//GEN-LAST:event_btnAlterarActionPerformed
    
    private void alterarProfessor(){
        DefaultTableModel model = (DefaultTableModel) getTbProfessor().getModel();
        String cpf = (String) model.getValueAt(getTbProfessor().getSelectedRow(), 0);
        
        Professor professor = new Professor();
        professor.setCpf(cpf);
        int index = getListaProfessores().indexOf(professor);
        
        if(index > -1){
            professor = getListaProfessores().get(index);            
            preencherCampos(professor);
            alterar = true;
            getBtnAlterar().setEnabled(false);
            getBtnExcluir().setEnabled(false);
            getTbProfessor().setEnabled(false);
        }
    }
    
    private void tbProfessorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbProfessorMouseClicked
        if(evt.getClickCount() == 2){
            if(getTbProfessor().getSelectedRow() >- 1){
                alterarProfessor();
            }   
        }
    }//GEN-LAST:event_tbProfessorMouseClicked
       
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bgSexo;
    private javax.swing.JButton btnAlterar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnOk;
    private javax.swing.JComboBox<String> cbDepartamento;
    private javax.swing.JComboBox<String> cbTitulacao;
    private javax.swing.JFormattedTextField ftfCpf;
    private javax.swing.JFormattedTextField ftfDataNasc;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JFormattedTextField jftMatricula;
    private javax.swing.JTextField jtfEndereco;
    private javax.swing.JLabel lCpf;
    private javax.swing.JLabel lDataNasc;
    private javax.swing.JLabel lbDepartamento;
    private javax.swing.JLabel lbEndereco;
    private javax.swing.JLabel lbMatrícula;
    private javax.swing.JLabel lbNome;
    private javax.swing.JLabel lbTitulacao;
    private javax.swing.JPanel pBotoes;
    private javax.swing.JPanel pBotoesTabela;
    private javax.swing.JPanel pInfBasicas;
    private javax.swing.JPanel pInfProfessor;
    private javax.swing.JPanel pSexo;
    private javax.swing.JPanel pTabelaProfessor;
    private javax.swing.JRadioButton rbFem;
    private javax.swing.JRadioButton rbMasc;
    private javax.swing.JScrollPane spTabelaProfessor;
    private javax.swing.JTable tbProfessor;
    private javax.swing.JTextField tfNome;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the bgSexo
     */
    public javax.swing.ButtonGroup getBgSexo() {
        return bgSexo;
    }

    /**
     * @param bgSexo the bgSexo to set
     */
    public void setBgSexo(javax.swing.ButtonGroup bgSexo) {
        this.bgSexo = bgSexo;
    }

    /**
     * @return the btnCancelar
     */
    public javax.swing.JButton getBtnCancelar() {
        return btnCancelar;
    }

    /**
     * @param btnCancelar the btnCancelar to set
     */
    public void setBtnCancelar(javax.swing.JButton btnCancelar) {
        this.btnCancelar = btnCancelar;
    }

    /**
     * @return the btnOk
     */
    public javax.swing.JButton getBtnOk() {
        return btnOk;
    }

    /**
     * @param btnOk the btnOk to set
     */
    public void setBtnOk(javax.swing.JButton btnOk) {
        this.btnOk = btnOk;
    }

    /**
     * @return the cbDepartamento
     */
    public javax.swing.JComboBox<String> getCbDepartamento() {
        return cbDepartamento;
    }

    /**
     * @param cbDepartamento the cbDepartamento to set
     */
    public void setCbDepartamento(javax.swing.JComboBox<String> cbDepartamento) {
        this.cbDepartamento = cbDepartamento;
    }

    /**
     * @return the cbTitulacao
     */
    public javax.swing.JComboBox<String> getCbTitulacao() {
        return cbTitulacao;
    }

    /**
     * @param cbTitulacao the cbTitulacao to set
     */
    public void setCbTitulacao(javax.swing.JComboBox<String> cbTitulacao) {
        this.cbTitulacao = cbTitulacao;
    }

    /**
     * @return the ftfCpf
     */
    public javax.swing.JFormattedTextField getFtfCpf() {
        return ftfCpf;
    }

    /**
     * @param ftfCpf the ftfCpf to set
     */
    public void setFtfCpf(javax.swing.JFormattedTextField ftfCpf) {
        this.ftfCpf = ftfCpf;
    }

    /**
     * @return the ftfDataNasc
     */
    public javax.swing.JFormattedTextField getFtfDataNasc() {
        return ftfDataNasc;
    }

    /**
     * @param ftfDataNasc the ftfDataNasc to set
     */
    public void setFtfDataNasc(javax.swing.JFormattedTextField ftfDataNasc) {
        this.ftfDataNasc = ftfDataNasc;
    }

    /**
     * @return the jftMatricula
     */
    public javax.swing.JFormattedTextField getJftMatricula() {
        return jftMatricula;
    }

    /**
     * @param jftMatricula the jftMatricula to set
     */
    public void setJftMatricula(javax.swing.JFormattedTextField jftMatricula) {
        this.jftMatricula = jftMatricula;
    }

    /**
     * @return the jtfEndereco
     */
    public javax.swing.JTextField getJtfEndereco() {
        return jtfEndereco;
    }

    /**
     * @param jtfEndereco the jtfEndereco to set
     */
    public void setJtfEndereco(javax.swing.JTextField jtfEndereco) {
        this.jtfEndereco = jtfEndereco;
    }

    /**
     * @return the lCpf
     */
    public javax.swing.JLabel getlCpf() {
        return lCpf;
    }

    /**
     * @param lCpf the lCpf to set
     */
    public void setlCpf(javax.swing.JLabel lCpf) {
        this.lCpf = lCpf;
    }

    /**
     * @return the lDataNasc
     */
    public javax.swing.JLabel getlDataNasc() {
        return lDataNasc;
    }

    /**
     * @param lDataNasc the lDataNasc to set
     */
    public void setlDataNasc(javax.swing.JLabel lDataNasc) {
        this.lDataNasc = lDataNasc;
    }

    /**
     * @return the lbDepartamento
     */
    public javax.swing.JLabel getLbDepartamento() {
        return lbDepartamento;
    }

    /**
     * @param lbDepartamento the lbDepartamento to set
     */
    public void setLbDepartamento(javax.swing.JLabel lbDepartamento) {
        this.lbDepartamento = lbDepartamento;
    }

    /**
     * @return the lbEndereco
     */
    public javax.swing.JLabel getLbEndereco() {
        return lbEndereco;
    }

    /**
     * @param lbEndereco the lbEndereco to set
     */
    public void setLbEndereco(javax.swing.JLabel lbEndereco) {
        this.lbEndereco = lbEndereco;
    }

    /**
     * @return the lbMatrícula
     */
    public javax.swing.JLabel getLbMatrícula() {
        return lbMatrícula;
    }

    /**
     * @param lbMatrícula the lbMatrícula to set
     */
    public void setLbMatrícula(javax.swing.JLabel lbMatrícula) {
        this.lbMatrícula = lbMatrícula;
    }

    /**
     * @return the lbNome
     */
    public javax.swing.JLabel getLbNome() {
        return lbNome;
    }

    /**
     * @param lbNome the lbNome to set
     */
    public void setLbNome(javax.swing.JLabel lbNome) {
        this.lbNome = lbNome;
    }

    /**
     * @return the lbTitulacao
     */
    public javax.swing.JLabel getLbTitulacao() {
        return lbTitulacao;
    }

    /**
     * @param lbTitulacao the lbTitulacao to set
     */
    public void setLbTitulacao(javax.swing.JLabel lbTitulacao) {
        this.lbTitulacao = lbTitulacao;
    }

    /**
     * @return the pBotoes
     */
    public javax.swing.JPanel getpBotoes() {
        return pBotoes;
    }

    /**
     * @param pBotoes the pBotoes to set
     */
    public void setpBotoes(javax.swing.JPanel pBotoes) {
        this.pBotoes = pBotoes;
    }

    /**
     * @return the pInfBasicas
     */
    public javax.swing.JPanel getpInfBasicas() {
        return pInfBasicas;
    }

    /**
     * @param pInfBasicas the pInfBasicas to set
     */
    public void setpInfBasicas(javax.swing.JPanel pInfBasicas) {
        this.pInfBasicas = pInfBasicas;
    }

    /**
     * @return the pInfProfessor
     */
    public javax.swing.JPanel getpInfProfessor() {
        return pInfProfessor;
    }

    /**
     * @param pInfProfessor the pInfProfessor to set
     */
    public void setpInfProfessor(javax.swing.JPanel pInfProfessor) {
        this.pInfProfessor = pInfProfessor;
    }

    /**
     * @return the pSexo
     */
    public javax.swing.JPanel getpSexo() {
        return pSexo;
    }

    /**
     * @param pSexo the pSexo to set
     */
    public void setpSexo(javax.swing.JPanel pSexo) {
        this.pSexo = pSexo;
    }

    /**
     * @return the rbFem
     */
    public javax.swing.JRadioButton getRbFem() {
        return rbFem;
    }

    /**
     * @param rbFem the rbFem to set
     */
    public void setRbFem(javax.swing.JRadioButton rbFem) {
        this.rbFem = rbFem;
    }

    /**
     * @return the rbMasc
     */
    public javax.swing.JRadioButton getRbMasc() {
        return rbMasc;
    }

    /**
     * @param rbMasc the rbMasc to set
     */
    public void setRbMasc(javax.swing.JRadioButton rbMasc) {
        this.rbMasc = rbMasc;
    }

    /**
     * @return the tfNome
     */
    public javax.swing.JTextField getTfNome() {
        return tfNome;
    }

    /**
     * @param tfNome the tfNome to set
     */
    public void setTfNome(javax.swing.JTextField tfNome) {
        this.tfNome = tfNome;
    }

    /**
     * @return the btnAlterar
     */
    public javax.swing.JButton getBtnAlterar() {
        return btnAlterar;
    }

    /**
     * @param btnAlterar the btnAlterar to set
     */
    public void setBtnAlterar(javax.swing.JButton btnAlterar) {
        this.btnAlterar = btnAlterar;
    }

    /**
     * @return the btnExcluir
     */
    public javax.swing.JButton getBtnExcluir() {
        return btnExcluir;
    }

    /**
     * @param btnExcluir the btnExcluir to set
     */
    public void setBtnExcluir(javax.swing.JButton btnExcluir) {
        this.btnExcluir = btnExcluir;
    }

    /**
     * @return the jLayeredPane1
     */
    public javax.swing.JLayeredPane getjLayeredPane1() {
        return jLayeredPane1;
    }

    /**
     * @param jLayeredPane1 the jLayeredPane1 to set
     */
    public void setjLayeredPane1(javax.swing.JLayeredPane jLayeredPane1) {
        this.jLayeredPane1 = jLayeredPane1;
    }

    /**
     * @return the jProgressBar1
     */
    public javax.swing.JProgressBar getjProgressBar1() {
        return jProgressBar1;
    }

    /**
     * @param jProgressBar1 the jProgressBar1 to set
     */
    public void setjProgressBar1(javax.swing.JProgressBar jProgressBar1) {
        this.jProgressBar1 = jProgressBar1;
    }

    /**
     * @return the pBotoesTabela
     */
    public javax.swing.JPanel getpBotoesTabela() {
        return pBotoesTabela;
    }

    /**
     * @param pBotoesTabela the pBotoesTabela to set
     */
    public void setpBotoesTabela(javax.swing.JPanel pBotoesTabela) {
        this.pBotoesTabela = pBotoesTabela;
    }

    /**
     * @return the pTabelaProfessor
     */
    public javax.swing.JPanel getpTabelaProfessor() {
        return pTabelaProfessor;
    }

    /**
     * @param pTabelaProfessor the pTabelaProfessor to set
     */
    public void setpTabelaProfessor(javax.swing.JPanel pTabelaProfessor) {
        this.pTabelaProfessor = pTabelaProfessor;
    }

    /**
     * @return the spTabelaProfessor
     */
    public javax.swing.JScrollPane getSpTabelaProfessor() {
        return spTabelaProfessor;
    }

    /**
     * @param spTabelaProfessor the spTabelaProfessor to set
     */
    public void setSpTabelaProfessor(javax.swing.JScrollPane spTabelaProfessor) {
        this.spTabelaProfessor = spTabelaProfessor;
    }

    /**
     * @return the tbProfessor
     */
    public javax.swing.JTable getTbProfessor() {
        return tbProfessor;
    }

    /**
     * @param tbProfessor the tbProfessor to set
     */
    public void setTbProfessor(javax.swing.JTable tbProfessor) {
        this.tbProfessor = tbProfessor;
    }
}
