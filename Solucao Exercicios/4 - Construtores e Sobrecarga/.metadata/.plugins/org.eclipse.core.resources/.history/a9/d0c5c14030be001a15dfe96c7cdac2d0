public class RetasNoPlano {
	
	private Ponto2D a;
	private Ponto2D b;
	
	RetasNoPlano(Ponto2D umA, Ponto2D umB){
		
		a = new Ponto2D(umA.retornaCoordenadaX(),umA.retornaCoordenadaY());
		b = new Ponto2D(umB.retornaCoordenadaX(),umB.retornaCoordenadaY());
		
	}
	
	RetasNoPlano(Ponto2D umA){
		
		a = new Ponto2D(umA.retornaCoordenadaX(),umA.retornaCoordenadaY());
		b = new Ponto2D();
		
	}
	
	RetasNoPlano(){
		
		a = new Ponto2D();
		b = new Ponto2D();
		
	}
	
	RetasNoPlano(double x1, double y1, double x2, double y2){
		
		a = new Ponto2D(x1,y1);
		b = new Ponto2D(x2,y2);
				
	}
	
	public double calculaCoeficienteAngular() {
		
		if(b.retornaCoordenadaY() > a.retornaCoordenadaY()) {
			
			if(b.retornaCoordenadaX() == a.retornaCoordenadaX()) {
				
				return 0; // tangente sem definição
				
			}
			else {
				
				return ((b.retornaCoordenadaY()-a.retornaCoordenadaY())/(b.retornaCoordenadaX()-a.retornaCoordenadaX()));
			
			}
			
		}
		else if(a.retornaCoordenadaY() > b.retornaCoordenadaY()) {
			
			if(b.retornaCoordenadaX() == a.retornaCoordenadaX()) {
				
				return 0; // tangente sem definição
				
			}
			else {
				
				return ((a.retornaCoordenadaY()-b.retornaCoordenadaY())/(a.retornaCoordenadaX()-b.retornaCoordenadaX()));
			
			}
						
		}
		else {
			
			return 0; // tangente sem definição
			
		}
				
	}
	
	public double calculaCoeficienteLinear() {
		
		double m, n;
		
		m = calculaCoeficienteAngular();
		
		n = a.retornaCoordenadaY() - (m*a.retornaCoordenadaX());
		
		return n;	
		
	}
	
	public String comparacaoEntreRetas(RetasNoPlano outraReta) {
		
		String resultado;
		
		if(calculaCoeficienteAngular()==outraReta.calculaCoeficienteAngular()) {
			
			if(calculaCoeficienteLinear()==outraReta.calculaCoeficienteLinear()) {
				
				resultado = "As retas são coincidentes!" + "\n";
				
				return resultado;
				
			}
			else {
				
				resultado = "As retas são paralelas!" + "\n";
				
				return resultado;
			
			}
			
		}
		else {
			
			if(calculaCoeficienteAngular()==-(1/outraReta.calculaCoeficienteAngular())) {
				
				resultado = "As retas são perpendiculares!" + "\n";
				
				return resultado;
				
			}
			else {
				
				resultado = "As retas são concorrentes!" + "\n";
				
				return resultado;
			
			}
			
		}
		
	}
	
	public RetasNoPlano clona(RetasNoPlano outraReta) {
		
		RetasNoPlano clone = new RetasNoPlano(outraReta.a,outraReta.b);
		
		return clone;
		
	}
	
	public String toString() {
		
		String equacaoDaReta = "";
		
		equacaoDaReta = equacaoDaReta + "y = ";
		equacaoDaReta = equacaoDaReta + calculaCoeficienteAngular()+"x";
		equacaoDaReta = equacaoDaReta + " + " + "(";
		equacaoDaReta = equacaoDaReta + calculaCoeficienteLinear()+")";
		
		return equacaoDaReta;
		
	}
}
